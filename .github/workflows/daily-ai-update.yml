name: Daily AI Update

on:
  schedule:
    # Run daily at 12:00 UTC
    - cron: '0 12 * * *'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  update-csv:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run update script
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
        run: |
          cd python
          python update_csv.py > update_output.txt
          echo "Contents of update_output.txt:" 
          cat update_output.txt
          if [ -s update_output.txt ]; then
            # Use EOF to handle special characters in the commit message
            commit_msg=$(cat update_output.txt)
            echo "COMMIT_MSG<<EOF" >> $GITHUB_ENV
            echo "$commit_msg" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "COMMIT_MSG=No update available" >> $GITHUB_ENV
          fi
          echo "UPDATE_DATE=$(date +%Y/%m/%d)" >> $GITHUB_ENV
      
      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add public/data/
          git diff --staged --quiet || git commit -m "daily-ai-update: ${{ env.UPDATE_DATE }}" -m "${{ env.COMMIT_MSG }}"
          git push
          
      - name: Trigger deploy workflow
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy.yml',
              ref: 'main'
            })
